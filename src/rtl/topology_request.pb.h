// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: topology_request.proto

#ifndef PROTOBUF_topology_5frequest_2eproto__INCLUDED
#define PROTOBUF_topology_5frequest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace molemind {
namespace sdm {
namespace io {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_topology_5frequest_2eproto();
void protobuf_InitDefaults_topology_5frequest_2eproto();
void protobuf_AssignDesc_topology_5frequest_2eproto();
void protobuf_ShutdownFile_topology_5frequest_2eproto();

class topoolgy_request;

// ===================================================================

class topoolgy_request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:molemind.sdm.io.topoolgy_request) */ {
 public:
  topoolgy_request();
  virtual ~topoolgy_request();

  topoolgy_request(const topoolgy_request& from);

  inline topoolgy_request& operator=(const topoolgy_request& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const topoolgy_request& default_instance();

  static const topoolgy_request* internal_default_instance();

  void Swap(topoolgy_request* other);

  // implements Message ----------------------------------------------

  inline topoolgy_request* New() const { return New(NULL); }

  topoolgy_request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const topoolgy_request& from);
  void MergeFrom(const topoolgy_request& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(topoolgy_request* other);
  void UnsafeMergeFrom(const topoolgy_request& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string target_space = 1;
  void clear_target_space();
  static const int kTargetSpaceFieldNumber = 1;
  const ::std::string& target_space() const;
  void set_target_space(const ::std::string& value);
  void set_target_space(const char* value);
  void set_target_space(const char* value, size_t size);
  ::std::string* mutable_target_space();
  ::std::string* release_target_space();
  void set_allocated_target_space(::std::string* target_space);

  // optional string source_space = 2;
  void clear_source_space();
  static const int kSourceSpaceFieldNumber = 2;
  const ::std::string& source_space() const;
  void set_source_space(const ::std::string& value);
  void set_source_space(const char* value);
  void set_source_space(const char* value, size_t size);
  ::std::string* mutable_source_space();
  ::std::string* release_source_space();
  void set_allocated_source_space(::std::string* source_space);

  // optional string source_name = 3;
  void clear_source_name();
  static const int kSourceNameFieldNumber = 3;
  const ::std::string& source_name() const;
  void set_source_name(const ::std::string& value);
  void set_source_name(const char* value);
  void set_source_name(const char* value, size_t size);
  ::std::string* mutable_source_name();
  ::std::string* release_source_name();
  void set_allocated_source_name(::std::string* source_name);

  // optional int64 max_card = 4;
  void clear_max_card();
  static const int kMaxCardFieldNumber = 4;
  ::google::protobuf::int64 max_card() const;
  void set_max_card(::google::protobuf::int64 value);

  // optional float p_lower = 5;
  void clear_p_lower();
  static const int kPLowerFieldNumber = 5;
  float p_lower() const;
  void set_p_lower(float value);

  // optional float rho_upper = 6;
  void clear_rho_upper();
  static const int kRhoUpperFieldNumber = 6;
  float rho_upper() const;
  void set_rho_upper(float value);

  // @@protoc_insertion_point(class_scope:molemind.sdm.io.topoolgy_request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr target_space_;
  ::google::protobuf::internal::ArenaStringPtr source_space_;
  ::google::protobuf::internal::ArenaStringPtr source_name_;
  ::google::protobuf::int64 max_card_;
  float p_lower_;
  float rho_upper_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_topology_5frequest_2eproto_impl();
  friend void  protobuf_AddDesc_topology_5frequest_2eproto_impl();
  friend void protobuf_AssignDesc_topology_5frequest_2eproto();
  friend void protobuf_ShutdownFile_topology_5frequest_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<topoolgy_request> topoolgy_request_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// topoolgy_request

// optional string target_space = 1;
inline void topoolgy_request::clear_target_space() {
  target_space_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& topoolgy_request::target_space() const {
  // @@protoc_insertion_point(field_get:molemind.sdm.io.topoolgy_request.target_space)
  return target_space_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void topoolgy_request::set_target_space(const ::std::string& value) {
  
  target_space_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:molemind.sdm.io.topoolgy_request.target_space)
}
inline void topoolgy_request::set_target_space(const char* value) {
  
  target_space_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:molemind.sdm.io.topoolgy_request.target_space)
}
inline void topoolgy_request::set_target_space(const char* value, size_t size) {
  
  target_space_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:molemind.sdm.io.topoolgy_request.target_space)
}
inline ::std::string* topoolgy_request::mutable_target_space() {
  
  // @@protoc_insertion_point(field_mutable:molemind.sdm.io.topoolgy_request.target_space)
  return target_space_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* topoolgy_request::release_target_space() {
  // @@protoc_insertion_point(field_release:molemind.sdm.io.topoolgy_request.target_space)
  
  return target_space_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void topoolgy_request::set_allocated_target_space(::std::string* target_space) {
  if (target_space != NULL) {
    
  } else {
    
  }
  target_space_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_space);
  // @@protoc_insertion_point(field_set_allocated:molemind.sdm.io.topoolgy_request.target_space)
}

// optional string source_space = 2;
inline void topoolgy_request::clear_source_space() {
  source_space_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& topoolgy_request::source_space() const {
  // @@protoc_insertion_point(field_get:molemind.sdm.io.topoolgy_request.source_space)
  return source_space_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void topoolgy_request::set_source_space(const ::std::string& value) {
  
  source_space_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:molemind.sdm.io.topoolgy_request.source_space)
}
inline void topoolgy_request::set_source_space(const char* value) {
  
  source_space_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:molemind.sdm.io.topoolgy_request.source_space)
}
inline void topoolgy_request::set_source_space(const char* value, size_t size) {
  
  source_space_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:molemind.sdm.io.topoolgy_request.source_space)
}
inline ::std::string* topoolgy_request::mutable_source_space() {
  
  // @@protoc_insertion_point(field_mutable:molemind.sdm.io.topoolgy_request.source_space)
  return source_space_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* topoolgy_request::release_source_space() {
  // @@protoc_insertion_point(field_release:molemind.sdm.io.topoolgy_request.source_space)
  
  return source_space_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void topoolgy_request::set_allocated_source_space(::std::string* source_space) {
  if (source_space != NULL) {
    
  } else {
    
  }
  source_space_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_space);
  // @@protoc_insertion_point(field_set_allocated:molemind.sdm.io.topoolgy_request.source_space)
}

// optional string source_name = 3;
inline void topoolgy_request::clear_source_name() {
  source_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& topoolgy_request::source_name() const {
  // @@protoc_insertion_point(field_get:molemind.sdm.io.topoolgy_request.source_name)
  return source_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void topoolgy_request::set_source_name(const ::std::string& value) {
  
  source_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:molemind.sdm.io.topoolgy_request.source_name)
}
inline void topoolgy_request::set_source_name(const char* value) {
  
  source_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:molemind.sdm.io.topoolgy_request.source_name)
}
inline void topoolgy_request::set_source_name(const char* value, size_t size) {
  
  source_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:molemind.sdm.io.topoolgy_request.source_name)
}
inline ::std::string* topoolgy_request::mutable_source_name() {
  
  // @@protoc_insertion_point(field_mutable:molemind.sdm.io.topoolgy_request.source_name)
  return source_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* topoolgy_request::release_source_name() {
  // @@protoc_insertion_point(field_release:molemind.sdm.io.topoolgy_request.source_name)
  
  return source_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void topoolgy_request::set_allocated_source_name(::std::string* source_name) {
  if (source_name != NULL) {
    
  } else {
    
  }
  source_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_name);
  // @@protoc_insertion_point(field_set_allocated:molemind.sdm.io.topoolgy_request.source_name)
}

// optional int64 max_card = 4;
inline void topoolgy_request::clear_max_card() {
  max_card_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 topoolgy_request::max_card() const {
  // @@protoc_insertion_point(field_get:molemind.sdm.io.topoolgy_request.max_card)
  return max_card_;
}
inline void topoolgy_request::set_max_card(::google::protobuf::int64 value) {
  
  max_card_ = value;
  // @@protoc_insertion_point(field_set:molemind.sdm.io.topoolgy_request.max_card)
}

// optional float p_lower = 5;
inline void topoolgy_request::clear_p_lower() {
  p_lower_ = 0;
}
inline float topoolgy_request::p_lower() const {
  // @@protoc_insertion_point(field_get:molemind.sdm.io.topoolgy_request.p_lower)
  return p_lower_;
}
inline void topoolgy_request::set_p_lower(float value) {
  
  p_lower_ = value;
  // @@protoc_insertion_point(field_set:molemind.sdm.io.topoolgy_request.p_lower)
}

// optional float rho_upper = 6;
inline void topoolgy_request::clear_rho_upper() {
  rho_upper_ = 0;
}
inline float topoolgy_request::rho_upper() const {
  // @@protoc_insertion_point(field_get:molemind.sdm.io.topoolgy_request.rho_upper)
  return rho_upper_;
}
inline void topoolgy_request::set_rho_upper(float value) {
  
  rho_upper_ = value;
  // @@protoc_insertion_point(field_set:molemind.sdm.io.topoolgy_request.rho_upper)
}

inline const topoolgy_request* topoolgy_request::internal_default_instance() {
  return &topoolgy_request_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace io
}  // namespace sdm
}  // namespace molemind

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_topology_5frequest_2eproto__INCLUDED
